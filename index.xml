<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TLSeminar</title>
    <link>https://tlseminar.github.io/index.xml</link>
    <description>Recent content on TLSeminar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://tlseminar.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Blogging Mechanics</title>
      <link>https://tlseminar.github.io/blogging/</link>
      <pubDate>Sun, 22 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tlseminar.github.io/blogging/</guid>
      <description>&lt;p&gt;Here are some suggestions for how to create the class blog posts for
your assigned classes.  I believe each team has at least a few members
with enough experience using git and web contruction tools that
following these instructions won&amp;rsquo;t be a big burden, but if you have
other ways you want to build your blog page for a topic let me know
and we can discuss alternative options.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.  Hugo is a static website
generator that builds a site from Markdown pages.  (With homebrew on
Mac OS X, this is easy: &lt;code&gt;brew update &amp;amp;&amp;amp; brew install hugo&lt;/code&gt;.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Clone the github repository,
&lt;a href=&#34;https://github.com/tlseminar/tlseminar.github.io&#34;&gt;&lt;em&gt;https://github.com/tlseminar/tlseminar.github.io&lt;/em&gt;&lt;/a&gt;.
This is what is used to build the
&lt;a href=&#34;https://tlseminar.github.io&#34;&gt;tlseminar.github.io&lt;/a&gt; site.  If you are
working with multiple teammates on the blog post (which you probably
should be), you can add write permissions for everyone to the cloned
repository.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You should create your page in the &lt;code&gt;web/content/post/&lt;/code&gt;
subdirectory. You can start by copying an earlier file (e.g., &lt;code&gt;cp
class1.md classX.md&lt;/code&gt;) and updating the header section (between the
&lt;code&gt;+++&lt;/code&gt; marks) and replacing everything after that with your content.
You can use multiple files (but probably only one in the &lt;code&gt;post/&lt;/code&gt;
directory (this will show up as pages on the front list).  Use the
&lt;code&gt;web/content/images&lt;/code&gt; directory for images and the &lt;code&gt;web/content/docs&lt;/code&gt;
directory for papers.  Using images and other resources to make your
post interesting and visually compelling is highly encouraged!&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Write the blog page using Markdown.  Markdown is a simple markup
language that can be used to easily generate both HTML and other
output document formats.  You can probably figure out everything you
need by looking at previous posts, but for a summary of Markdown,
see &lt;a href=&#34;https://daringfireball.net/projects/markdown/syntax&#34;&gt;Markdown: Syntax&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To test the post, run &lt;code&gt;make develop&lt;/code&gt; (in the &lt;code&gt;web/&lt;/code&gt; subdirectory of
your repository).  This starts the Hugo development server, usually
on port 1313 (unless that port is already in use).  Then, you can
view the site with a browser at &lt;code&gt;localhost:1313&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When you are ready, submit a pull request to incorporate your
changes into the main repository (and public course website).  At
this stage, I will probably make things visible on the public site,
although it can still be edited and improved with subsequent
comments.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Class 1: Introduction</title>
      <link>https://tlseminar.github.io/class1/</link>
      <pubDate>Fri, 20 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tlseminar.github.io/class1/</guid>
      <description>

&lt;p&gt;&lt;center&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;c819c3c91461456ca328e97a753f6d56&#34; data-ratio=&#34;1.77777777777778&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;plan&#34;&gt;Plan&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Find your team, introduce yourselves and figure out a management structure and plan.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Bid for your role:&lt;br /&gt;
T (lead Class 2: oracle padding attacks)&lt;br /&gt;
L (blog Class 1/lead 3: breaking weak asymmetric crypto, Drown)&lt;br /&gt;
S (lead Class 4: certificates)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;examining-certificates&#34;&gt;Examining Certificates&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;When does the certificate for &lt;a href=&#34;https://whitehouse.gov&#34;&gt;https://whitehouse.gov&lt;/a&gt; expire?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(won&amp;rsquo;t be able to answer this until later today) Does the new adminstration&amp;rsquo;s &lt;a href=&#34;https://whitehouse.gov&#34;&gt;https://whitehouse.gov&lt;/a&gt; site use the same private key as Obama&amp;rsquo;s?  (What should the answer to this question be?)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;first-few-milliseconds&#34;&gt;First Few Milliseconds&lt;/h1&gt;

&lt;p&gt;Jeff Moser&amp;rsquo;s &lt;a href=&#34;http://www.moserware.com/2009/06/first-few-milliseconds-of-https.html&#34;&gt;&lt;em&gt;The First Few Milliseconds of an HTTPS Connection&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install &lt;a href=&#34;https://www.wireshark.org/download.html&#34;&gt;Wireshark&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Start Wireshark, and look at all the TLS sessions running on your
laptop.  How many different TLS sessions are there?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Pick one of the TLS sessions and try to figure out what application
is using it.  Who are the endpoints?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Assuming (for now!) the encryption is all perfect, what could
someone intercepting the traffic learn?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;What differences can you observe compared to what is described for the TLS 1.0 connections on that web page?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Background Preparation</title>
      <link>https://tlseminar.github.io/background/</link>
      <pubDate>Wed, 14 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tlseminar.github.io/background/</guid>
      <description>

&lt;p&gt;Here are some suggestions for getting the necessary background for the
seminar.&lt;/p&gt;

&lt;h2 id=&#34;cryptography&#34;&gt;Cryptography&lt;/h2&gt;

&lt;p&gt;If you have already taken a cryptography course, you should have
enough cryptography background already.  If not, here are some
suggested ways to get enough crypo background over winter break to be
ready for the seminar.  I believe that for most students, the best way
to get the expected background for this course is to take my Applied
Cryptography course (more info below), but there are many options, and
lots of great resources that go into much more depth than my course if
you have more time.&lt;/p&gt;

&lt;h3 id=&#34;on-line-courses&#34;&gt;On-Line Courses&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.udacity.com/course/applied-cryptography--cs387&#34;&gt;&lt;strong&gt;Udacity cs387: Applied
Cryptography&lt;/strong&gt;&lt;/a&gt;
- this is an open on-line course that you can take anytime taught by
myself (so I am somewhat partial to it!).  There are &lt;a href=&#34;http://www.cs.virginia.edu/~evans/courses/cs387/&#34;&gt;some additional
materials for the course
available&lt;/a&gt;,
including &lt;a href=&#34;http://www.cs.virginia.edu/~evans/courses/crypto-notes.pdf&#34;&gt;extensive course notes
(PDF)&lt;/a&gt;
created by Daniel Winter.  This is a very short and informal
introduction to cryptography, which would be enough background to be
prepared for the seminar.  (I can&amp;rsquo;t give an unbiased assessment of the
course, but according to Information Week, it is a recommended course
to &lt;a href=&#34;http://www.informationweek.com/strategic-cio/team-building-and-staffing/5-online-classes-to-pump-up-it-careers/d/d-id/898915&#34;&gt;&lt;em&gt;&amp;ldquo;Pump Up IT
Careers&amp;rdquo;&lt;/em&gt;&lt;/a&gt;,
and &lt;a href=&#34;www.prospectmagazine.co.uk/magazine/online-universities-udacity-grand-challenge-david-stavens-dave-evans&#34;&gt;Prospect
Magazine&lt;/a&gt;
claimed the instructor has a &amp;ldquo;Monty Python humor&amp;rdquo; and &amp;ldquo;cult
following&amp;rdquo;, although you shouldn&amp;rsquo;t believe everything you read in
British magazines.)&lt;/p&gt;

&lt;p&gt;Dan Boneh&amp;rsquo;s &lt;a href=&#34;https://www.coursera.org/learn/crypto&#34;&gt;&lt;strong&gt;Cryptography
Course&lt;/strong&gt;&lt;/a&gt; (offered through
Coursera).  The materials from previous courses are not available
(although you may be able to find them if you are resourceful), so you
have to take the course when it is offered by Coursera. There is a
session starting December 26.  This is an excellent course that is a
bit longer and goes into more depth on many topics than my course.
You can read &lt;a href=&#34;http://bryanpendleton.blogspot.com/2012/05/comparing-coursera-and-udacity.html&#34;&gt;Bryan Pendleton&amp;rsquo;s more objective
comparison&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Christoff Parr and Jan Pelzl&amp;rsquo;s &lt;a href=&#34;http://www.crypto-textbook.com/&#34;&gt;&lt;strong&gt;Understanding
Cryptography&lt;/strong&gt;&lt;/a&gt; textbook includes
Parr&amp;rsquo;s excellent &lt;a href=&#34;http://wiki.crypto.rub.de/Buch/movies.php&#34;&gt;video
lectures&lt;/a&gt; (chalkboard
style without editing, so takes some patience to watch).&lt;/p&gt;

&lt;h3 id=&#34;textbooks&#34;&gt;Textbooks&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.crypto101.io/&#34;&gt;Crypto 101&lt;/a&gt; - a very easy to read and
practically-focused introduction to cryptography (available as a &lt;a href=&#34;https://tlseminar.github.io/docs/Crypto101.pdf&#34;&gt;free,
creative-commons licensed PDF&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.cs.umd.edu/~jkatz/imc.html&#34;&gt;&lt;em&gt;Introduction to Modern
Cryptography&lt;/em&gt;&lt;/a&gt;, Jonathan Katz
and Yehuda Lindell.  This provides a lot more depth that is required
for joining the seminar, but is an excellent book for ambitious
students with more time.&lt;/p&gt;

&lt;h2 id=&#34;computing-systems&#34;&gt;Computing Systems&lt;/h2&gt;

&lt;p&gt;Students in the class will benefit from understanding computing
systems and having experience with systems-level programming at least
at the level of a typical introductory operating systems course.
Students without this experience will either need to put a lot of
effort into learning it, or select projects and presentation topics
that focus on other aspects.&lt;/p&gt;

&lt;p&gt;Some resources for learning about computing systems are below.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ops-class.org/&#34;&gt;&amp;ldquo;Hack the Kernel&amp;rdquo;&lt;/a&gt; - Operating Systems
class developed by &lt;a href=&#34;https://www.bluegroup.systems/people/gwa/&#34;&gt;Geoffrey
Challen&lt;/a&gt;.  Provides
programming assignments you can try on your own, as well as video
lectures and lots of on-line materials.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://rust-class.org/&#34;&gt;cs4414: Operating Systems&lt;/a&gt; - Operating
systems course I taught in Fall 2013 and Spring 2014. Includes
&lt;a href=&#34;http://rust-class.org/pages/classes.html&#34;&gt;videos&lt;/a&gt; of lectures, and
programming assignments in Rust (some of which will need some updating
to work in the latest version of Rust).&lt;/p&gt;

&lt;p&gt;CMU&amp;rsquo;s &lt;a href=&#34;http://csapp.cs.cmu.edu/&#34;&gt;Computing Systems&lt;/a&gt; course and
textbook by Randal Bryant and David O&amp;rsquo;Hallaron provides an excellent
introduction to systems programming, as well as a series of &lt;a href=&#34;http://csapp.cs.cmu.edu/3e/labs.html&#34;&gt;fun
self-study labs&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;rust-programming&#34;&gt;Rust Programming&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;m hoping several of the projects will involve contribution to open
source projects using Rust to provide secure, efficient, and
iter-operable implementations of TLS and other cryptographic
functionalities.  It is not a requirement that you use Rust in this
class, but everyone will be encouraged to get some experience with it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://doc.rust-lang.org/nightly/book/&#34;&gt;&lt;strong&gt;Rust Programming Language
Book&lt;/strong&gt;&lt;/a&gt; (this is the
&amp;ldquo;official&amp;rdquo; Rust book, which includes a tutorial to get started)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://aml3.github.io/RustTutorial/&#34;&gt;&lt;strong&gt;Rust Tutorial&lt;/strong&gt;&lt;/a&gt; (this was
developed for my &lt;a href=&#34;https://rust-class.org/&#34;&gt;cs4414 class&lt;/a&gt; by Alex
Lamana, Rob Michaels, and Wil Thomason.  (Some parts may need updating
to latest version of Rust, so if you go through this, please submit
updates as pull requests!)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://rustbyexample.com/&#34;&gt;&lt;strong&gt;Rust by Example&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to TLSeminar!</title>
      <link>https://tlseminar.github.io/welcome/</link>
      <pubDate>Wed, 14 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tlseminar.github.io/welcome/</guid>
      <description>&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;http://xkcd.com/1353/&#34;&gt;
&lt;img src=&#34;//imgs.xkcd.com/comics/heartbleed.png&#34; title=&#34;I looked at some of the data dumps from vulnerable sites, and it was ... bad. I saw emails, passwords, password hints. SSL keys and session cookies. Important servers brimming with visitor IPs. Attack ships on fire off the shoulder of Orion, c-beams glittering in the dark near the Tannhäuser Gate. I should probably patch OpenSSL.&#34; alt=&#34;Heartbleed&#34; srcset=&#34;//imgs.xkcd.com/comics/heartbleed_2x.png 2x&#34;&gt;
&lt;/img&gt;
&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;This is the course site for &lt;strong&gt;cs6501: Understanding and Securing
TLS&lt;/strong&gt;. [&lt;a href=&#34;https://tlseminar.github.io/syllabus&#34;&gt;Syllabus&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;The first class is Friday, 20 January 2017 (9:30am-noon in Thornton
Hall D115).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tlseminar.github.io/projectideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tlseminar.github.io/projectideas/</guid>
      <description>

&lt;p&gt;This page collects some ideas for projects.  It is meant as a starting
point to help you think of things that might be interesting to do, not
to limit your possibilities.  Any topic that is related to TLS and the
ecosystem around TLS is within scope for your project.&lt;/p&gt;

&lt;h2 id=&#34;deployment-in-practice&#34;&gt;Deployment in Practice&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Why do the servers running critical sensitive services for UVA
appear to be so insecure?  What are the impediments in practice to
making services like
&lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=collab.virginia.edu&amp;amp;latest&#34;&gt;collab&lt;/a&gt;
and
&lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=sis.virginia.edu&amp;amp;latest&#34;&gt;sis&lt;/a&gt;
more secure?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;proxy-protected-server&#34;&gt;Proxy-Protected Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What can&amp;rsquo;t we provide a simple proxy service in front of a web
server that implements a simple, secure TLS endpoint?  What are the
latency and overhead costs of implementing a server this way?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Make it possible to configure a web server to use different
certificates with different key pairs for different protocols and
connection types.  (Motivated most immediately by the DROWN attack.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Contribute to tools automating use of ACME (e.g., for Let&amp;rsquo;s Encrypt
certificates).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;client-ui&#34;&gt;Client UI&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Most of the security indicators used by a browser can be spoofed,
and few users understand what parts of the current UI can be
&amp;ldquo;trusted&amp;rdquo; (controlled by the web browser core) and what parts are
untrusted (controlled by the web page).  Reconsider the web client
UI in a way that provides a stronger and clearer boundary between
trustworthy and site-controlled content.  [&lt;a href=&#34;https://textslashplain.com/2017/01/14/the-line-of-death/&#34;&gt;The Line of
Death&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Why not put the favicon for a site in its SSL certificate?  How hard
would it be to extend the current infrastructure to support this,
and to provide a browser client that displays trusted favicon
images.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tlseminar.github.io/readings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tlseminar.github.io/readings/</guid>
      <description>

&lt;h1 id=&#34;readings&#34;&gt;Readings&lt;/h1&gt;

&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;

&lt;p&gt;Wikipedia&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Transport_Layer_Security&#34;&gt;&lt;em&gt;Transport Layer
Security&lt;/em&gt;&lt;/a&gt;
page includes a quite extensive summary of TLS vulnerabilities.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.moserware.com/2009/06/first-few-milliseconds-of-https.html&#34;&gt;&lt;em&gt;The First Few Milliseconds of an HTTPS Connection&lt;/em&gt;&lt;/a&gt;, Jeff Moser, 2009.&lt;br /&gt;
&lt;a href=&#34;http://security.stackexchange.com/questions/131724/the-first-few-milliseconds-of-an-https-connection-tls-1-2-tls-echde-rsa-with&#34;&gt;Discussion about TLS1.2/1.3 Updates&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;protocol-specification&#34;&gt;Protocol Specification&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://tlswg.github.io/tls13-spec/&#34;&gt;The Transport Layer Security (TLS) Protocol Version
1.3&lt;/a&gt; (Internet Draft, 22 December
2016 is latest version as of today, 29 December 2016.)&lt;/p&gt;

&lt;p&gt;Earlier versions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc5246&#34;&gt;The Transport Layer Security (TLS) Protocol Version 1.2&lt;/a&gt; [&lt;a href=&#34;https://tools.ietf.org/pdf/rfc5246.pdf&#34;&gt;PDF&lt;/a&gt;], August 2008.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc3268&#34;&gt;Advanced Encryption Standard (AES) Ciphersuites for Transport Layer Security (TLS)&lt;/a&gt; [&lt;a href=&#34;https://tools.ietf.org/pdf/rfc3268.pdf&#34;&gt;PDF&lt;/a&gt;], June 2002.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc6101&#34;&gt;The Secure Sockets Layer (SSL) Protocol Version 3.0&lt;/a&gt; [&lt;a href=&#34;https://tools.ietf.org/pdf/rfc6101.pdf&#34;&gt;PDF&lt;/a&gt;], August 2011.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/rfc2246/&#34;&gt;The TLS Protocol Version 1.0&lt;/a&gt;, January 1999.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;protocol-analysis&#34;&gt;Protocol Analysis&lt;/h2&gt;

&lt;p&gt;David Wagner, Bruce Schneier. &lt;em&gt;Analysis of the SSL 3.0 Protocol&lt;/em&gt;.  In
&lt;em&gt;Second USENIX Workshop on Electronic Commerce Proceedings&lt;/em&gt;,
1996. [&lt;a href=&#34;https://tlseminar.github.io/docs/analysisssl3.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;h2 id=&#34;attacks&#34;&gt;Attacks&lt;/h2&gt;

&lt;p&gt;RFC on known attacks: &lt;em&gt;Summarizing Known Attacks on Transport Layer Security (TLS) and Datagram TLS (DTLS)&lt;/em&gt;. Y. Sheffer, et al. RFC 7457. February 2015. [&lt;a href=&#34;https://tools.ietf.org/html/rfc7457&#34;&gt;HTML&lt;/a&gt;] [&lt;a href=&#34;https://tools.ietf.org/pdf/rfc7457.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Daniel Bleichenbacher. &lt;em&gt;Chosen Ciphertext Attacks Against Protocols Based on the RSA Encryption Standard PKCS #1&lt;/em&gt;. CRYPTO 1998. [&lt;a href=&#34;http://archiv.infsec.ethz.ch/education/fs08/secsem/Bleichenbacher98.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Serge Vaudenay. &lt;em&gt;Security Flaws Induced by CBC Padding Applications to
SSL, IPSEC, WTLS&amp;hellip;&lt;/em&gt;. EuroCRYPT
2002. [&lt;a href=&#34;http://www.iacr.org/cryptodb/archive/2002/EUROCRYPT/2850/2850.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;David Brumley and Daniel Boneh. &lt;em&gt;Remote Timing Attacks are Practical&lt;/em&gt;.  USENIX Security Symposium 2003, and Computer Networks, August 2005. &lt;a href=&#34;Followed by: Billy Bob Brumley and Nicola Tuveri. _Remote Timing Attacks are Still Practical_. ESORICS 2011 [[PDF](https://eprint.iacr.org/2011/232.pdf)] [[ePrint](https://eprint.iacr.org/2011/232)]&#34;&gt;&lt;a href=&#34;https://tlseminar.github.io/docs/remotetiming.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Brice Canvel, Alain Hiltgen, Serge Vaudenay, and Martin Vuagnoux. &lt;em&gt;Password Interception in a SSL/TLS Channel&lt;/em&gt;. CRYPTO 2003. [&lt;a href=&#34;http://www.iacr.org/cryptodb/archive/2003/CRYPTO/1069/1069.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Thai Duong and Juliano Rizzo. &lt;em&gt;Here Come The &amp;oplus; Ninjas&lt;/em&gt;.  2011. [&lt;a href=&#34;https://tlseminar.github.io/docs/beast.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Nadhem AlFardan, Daniel J. Bernstein, Kenneth G. Paterson, Bertram Poettering, and Jacob C.N. Schuldt.
&lt;em&gt;On the Security of RC4 in TLS&lt;/em&gt;. USENIX Security Symposium 2013. [&lt;a href=&#34;https://www.usenix.org/system/files/conference/usenixsecurity13/sec13-paper_alfardan.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://www.usenix.org/conference/usenixsecurity13/technical-sessions/paper/alFardan&#34;&gt;Video&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Nadhem J. AlFardan and Kenneth G. Paterson. &lt;em&gt;Lucky Thirteen: Breaking the TLS and DTLS Record Protocols&lt;/em&gt;. IEEE Symposium on Security and Privacy (Oakland) 2013. [&lt;a href=&#34;http://www.isg.rhul.ac.uk/tls/TLStiming.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;http://www.isg.rhul.ac.uk/tls/Lucky13.html&#34;&gt;Website&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;David Adrian, Karthikeyan Bhargavan, Zakir Durumeric, Pierrick Gaudry,
Matthew Green, J. Alex Halderman, Nadia Heninger, Drew Springall,
Emmanuel Thomé, Luke Valenta, Benjamin VanderSloot, Eric Wustrow,
Santiago Zanella-Béguelin, and Paul Zimmermann. &lt;em&gt;Imperfect Forward
Secrecy: How Diffie-Hellman Fails in Practice&lt;/em&gt;.  22nd ACM Conference
on Computer and Communications Security (CCS ’15), October
2015. [&lt;a href=&#34;https://tlseminar.github.io/docs/logjam.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://weakdh.org/&#34;&gt;Website&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Nimrod Aviram, Sebastian Schinzel, Juraj Somorovsky, Nadia Heninger,
Maik Dankel, Jens Steube, Luke Valenta, David Adrian, J. Alex
Halderman, Viktor Dukhovni, Emilia Käsper, Shaanan Cohney, Susanne
Engels, Christof Paar, and Yuval Shavitt. &lt;em&gt;DROWN: Breaking TLS using
SSLv2&lt;/em&gt;. 25th USENIX Security Symposium, Austin, TX, August
2016. [&lt;a href=&#34;https://tlseminar.github.io/docs/drown.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://drownattack.com/&#34;&gt;Website&lt;/a&gt;]&lt;/p&gt;

&lt;h2 id=&#34;formal-methods&#34;&gt;Formal Methods&lt;/h2&gt;

&lt;p&gt;John C. Mitchell, Vitaly Shmatikov, and Ulrich Stern. &lt;em&gt;Finite-State Analysis of SSL 3.0&lt;/em&gt;. USENIX Security Symposium, January 1998. [&lt;a href=&#34;https://tlseminar.github.io/docs/finitestate.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Lawrence C. Paulson. &lt;em&gt;Inductive Analysis of the Internet Protocol TLS&lt;/em&gt;. ACM Transactions of Information and System Security, August 1999. [&lt;a href=&#34;https://tlseminar.github.io/docs/inductiveanalysis.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Karthikeyan Bhargavan, Ricardo Corin, Cédric Fournet, Eugen Zalinescu.
&lt;em&gt;Cryptographically Verified Implementations for TLS&lt;/em&gt;. ACM CCS
2008. [&lt;a href=&#34;https://tlseminar.github.io/docs/verifiedtls.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Tibor Jager, Florian Kohlar, Sven Schäge, and Jörg Schwenk. &lt;em&gt;On the Security of TLS-DHE in the Standard Model&lt;/em&gt;. May 2011. [&lt;a href=&#34;https://eprint.iacr.org/2011/219&#34;&gt;eprint&lt;/a&gt;] [&lt;a href=&#34;https://eprint.iacr.org/2011/219.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Krawczyk, Hugo, Kenneth G. Paterson, and Hoeteck Wee. &lt;em&gt;On the Security of the TLS Protocol: A Systematic Analysis&lt;/em&gt;. CRYPTO 2013.
[&lt;a href=&#34;http://eprint.iacr.org/2013/339&#34;&gt;eprint&lt;/a&gt;]
[&lt;a href=&#34;http://eprint.iacr.org/2013/339.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Karthikeyan Bhargavan, Cédric Fournet, Markulf Kohlweiss, Alfredo Pironti, Pierre-Yves Strub. &lt;em&gt;Implementing TLS with Verified Cryptographic Security&lt;/em&gt;
IEEE Symposium on Security and Privacy (Oakland), 2013. [&lt;a href=&#34;https://tlseminar.github.io/docs/mitls.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://tlseminar.github.io/docs/mitlstr.pdf&#34;&gt;Extended Tech Report, PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Karthikeyan Bhargavan1, Cedric Fournet, Markulf Kohlweiss, Alfredo Pironti, Pierre-Yves Strub, and Santiago Zanella-Beguelin. &lt;em&gt;Proving the TLS Handshake Secure (As It Is)&lt;/em&gt;. CRYPTO 2014. [&lt;a href=&#34;https://tlseminar.github.io/docs/provinghandshake.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;h2 id=&#34;implementation-bugs&#34;&gt;Implementation Bugs&lt;/h2&gt;

&lt;p&gt;Martin Georgiev, Subodh Iyengar, Suman Jana, Rishita Anubhai, Dan
Boneh, Vitaly Shmatikov. &lt;em&gt;The Most Dangerous Code in the World:
Validating SSL Certificates in Non-Browser Software&lt;/em&gt;.  ACM CCS 2012.
[&lt;a href=&#34;https://tlseminar.github.io/docs/mostdangerouscode.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;David Kaloper-Mersinjak, Hannes Mehnert, Anil Madhavapeddy and Peter Sewell. &lt;em&gt;Not-quite-so-broken TLS: lessons in re-engineering a security protocol
specification and implementation&lt;/em&gt;. USENIX Security 2015. [&lt;a href=&#34;https://tlseminar.github.io/docs/nqsbtls.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Benjamin Beurdouche, Karthikeyan Bhargavan, Antoine Delignat-Lavaud,
Cedric Fournet, Markulf Kohlweiss, Alfredo Pironti, Pierre-Yves Strub,
Jean Karim Zinzindohoue. &lt;em&gt;A Messy State of the Union: Taming the
Composite State Machines of TLS&lt;/em&gt;.  IEEE Symposium on Security and
Privacy (Oakland) 2015. [&lt;a href=&#34;https://tlseminar.github.io/docs/mitlsunion.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://www.youtube.com/watch?v=rELp9-oFAw0&#34;&gt;Talk Video&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Suman Jana, Yuan Kang, Samuel Roth, and &lt;a href=&#34;http://rayb.info/&#34;&gt;Baishakhi Ray&lt;/a&gt;. &lt;em&gt;Automatically Detecting Error Handling Bugs using Error Specifications&lt;/em&gt;. USENIX Security 2016. [&lt;a href=&#34;https://tlseminar.github.io/docs/epex.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;

&lt;p&gt;Chad Brubaker, Suman Jana, &lt;a href=&#34;http://rayb.info/&#34;&gt;Baishakhi Ray&lt;/a&gt;, Sarfraz Khurshid, Vitaly Shmatikov.
&lt;em&gt;Using Frankencerts for Automated Adversarial Testing of Certificate Validation in SSL/TLS Implementations&lt;/em&gt;. IEEE Symposium on Security and Privacy (Oakland) 2014. [&lt;a href=&#34;https://tlseminar.github.io/docs/frankencerts.pdf&#34;&gt;PDF&lt;/a&gt;].&lt;/p&gt;

&lt;p&gt;Benjamin Beurdouche, Antoine Delignat-Lavaud, Nadim Kobeissi, Alfredo Pironti, Karthikeyan Bhargavan. &lt;em&gt;FLEXTLS: A Tool for Testing TLS Implementations&lt;/em&gt;.
USENIX Workshop on Offensive Technologies, 2015. [&lt;a href=&#34;https://tlseminar.github.io/docs/flextls.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;h2 id=&#34;performance-and-cost&#34;&gt;Performance and Cost&lt;/h2&gt;

&lt;p&gt;Cristian Coarfa, Peter Druschel, and Dan S. Wallach. &lt;em&gt;Performance Analysis of TLS Web Servers&lt;/em&gt;.  ACM Transactions on Computer Systems (earlier version in NDSS 2002), February 2006. [&lt;a href=&#34;https://tlseminar.github.io/docs/performance.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;h2 id=&#34;certificates&#34;&gt;Certificates&lt;/h2&gt;

&lt;p&gt;Jeremy Clark and Paul C. van Oorschot. &lt;em&gt;SoK: SSL and HTTPS: Revisiting
past challenges and evaluating certificate trust model
enhancements&lt;/em&gt;. IEEE Symposium on Security and Privacy (Oakland) 2013.
[&lt;a href=&#34;https://tlseminar.github.io/docs/soktls.pdf&#34;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Dan Wendlandt, David G. Andersen, and Adrian Perrig. &lt;em&gt;Perspectives: Improving SSH-style Host Authentication with
Multi-Path Probing&lt;/em&gt;. USENIX ATC 2008. [&lt;a href=&#34;https://tlseminar.github.io/docs/perspectives.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://perspectives-project.org/&#34;&gt;Project Site&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.certificate-transparency.org/&#34;&gt;Certificate Transparency&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-acme-acme/?include_text=1&#34;&gt;ACMS&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;post-quantum&#34;&gt;Post-Quantum&lt;/h2&gt;

&lt;p&gt;Joppe W. Bos, Craig Costello, Michael Naehrig, and Douglas
Stebila. &lt;em&gt;Post-quantum key exchange for the TLS protocol from the ring
learning with errors problem&lt;/em&gt;.  IEEE Symposium on Security and Privacy (Oakland) 2016.
[&lt;a href=&#34;http://eprint.iacr.org/2014/599.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://www.youtube.com/watch?v=BCmSzzQ2ges&#34;&gt;Talk Video&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Erdem Alkim, Léo Ducas, Thomas Pöppelmann, and Peter Schwabe.
&lt;em&gt;Post-quantum Key Exchange—A New Hope&lt;/em&gt;.  USENIX Security Symposiumn 2016. [&lt;a href=&#34;https://www.usenix.org/system/files/conference/usenixsecurity16/sec16_paper_alkim.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/alkim&#34;&gt;Talk Video&lt;/a&gt;]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tlseminar.github.io/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tlseminar.github.io/resources/</guid>
      <description>&lt;p&gt;Links to resources will be added here soon.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tlseminar.github.io/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tlseminar.github.io/schedule/</guid>
      <description>

&lt;h1 id=&#34;teams&#34;&gt;Teams&lt;/h1&gt;

&lt;p&gt;(Note: team names are temporary, and will map to teams on schedule.)&lt;/p&gt;

&lt;table&gt;
&lt;tr bgcolor=&#34;#CCC&#34;&gt;&lt;td&gt;&lt;b&gt;Team Sesame&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Team Cinnamon&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Team Poppyseed&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
Adam Imeson (aei5uj)&lt;Br&gt;
Benyi Gong (bg3va)&lt;br&gt;
Bethlehem Naylor (bn9eb)&lt;br&gt;
Bhuvanesh Murali (bm4cr)&lt;br&gt;
Haina Li (hl3wb)&lt;br&gt;
Joshua Holtzman (jmh2ba)&lt;br&gt;
Reid Bixler (rmb3yz)&lt;br&gt;
&lt;/td&gt;
&lt;td&gt;
Anant Kharkar (agk7uc)&lt;br&gt;
Bargav Jayaraman (bj4nq)&lt;br&gt;
Benjamin Lowman (brl2xx)&lt;br&gt;
Bill Young (wty5dn)&lt;br&gt;
Darion Cassel (dfc9ed)&lt;br&gt;
Guthrie Alexander (goa5t)&lt;br&gt;
Sam Havron (sgh7cc)&lt;br&gt;
Vikram Patwardhan (vvp2da)&lt;br&gt;
Yuchi Tian (yt8mn)&lt;br&gt;
&lt;/td&gt;
&lt;td&gt;
Collin Berman (cmb5nh)&lt;br&gt;
Cyrus Malekpour (cm7bv)&lt;br&gt;
Haoran Liu (hl4fb)&lt;br&gt;
Daniel Saha (drs5ma)&lt;br&gt;
Jerry Sun (ys7va)&lt;br&gt;
Minghua Jiang (mj2eu)&lt;br&gt;
Saeed Mahlouji Far (sm5fd)&lt;br&gt;
Sihang Liu (sl4jg)&lt;br&gt;
Tianyi Jin (tj2cw)&lt;br&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/table&gt;&lt;/p&gt;

&lt;h1 id=&#34;schedule&#34;&gt;Schedule&lt;/h1&gt;

&lt;p&gt;For each week (except for project proposal and presentation weeks),
one team will be responsible for Leading the class, one team for
writing a Blog post on the class topic, and one team for arranging
food.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Leading Team.&lt;/strong&gt;  The team responsible for leading a class should:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Two weeks before the scheduled class, meet briefly with the coordinator(s) to discuss plan for the class.&lt;/li&gt;
&lt;li&gt;One week before the scheduled class, go over detailed plan for class with coordinator.&lt;/li&gt;
&lt;li&gt;No later than one week before class: send out to the class Slack group the preparation materials for the class.  This can include links to papers to read, but could also include exercises to do or software to install and experiment with, etc.&lt;/li&gt;
&lt;li&gt;Day of class: lead an interesting, engaging, and illuminating class!&lt;/li&gt;
&lt;li&gt;After class: help the Blogging team by providing them with your materials, answering their questions, and reviewing their write-up.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Blogging Team.&lt;/strong&gt; The team responsible for blogging a class should:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The week before the scheduled class, do the preparation work posted by the lead team.&lt;/li&gt;
&lt;li&gt;The week before the scheduled class, develop a team plan for how to manage the blogging.&lt;/li&gt;
&lt;li&gt;During class, participate actively in the class, and take detailed notes (this can be distributed among the team).&lt;/li&gt;
&lt;li&gt;By the Tuesday following class, have a draft of the blog post ready, and share it with the rest of the class (including the leading team and coordinators) for comments.&lt;/li&gt;
&lt;li&gt;By the next Friday (one week after the class), have a final version of the blog post ready to add to the course site.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Food Team.&lt;/strong&gt; The team responsible for food should:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The week before the scheduled class, do the preparation work posted by the lead team.&lt;/li&gt;
&lt;li&gt;Plan among yourselves what food to bring and who is responsible.  If
you want to use my credit card to buy food, borrow it.&lt;/li&gt;
&lt;li&gt;Bring something yummy, but not too messy or disruptive, to class.&lt;/li&gt;
&lt;li&gt;Save the receipts to get reimbursed, and take care of the
reimbursement. (This is easiest if the reimbursee is someone already
set up in the CS department&amp;rsquo;s financial system.)&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;tr bgcolor=&#34;#CCC&#34;&gt;&lt;td&gt;&lt;b&gt;Date&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Topic&lt;/b&gt;&lt;/td&gt;&lt;td width=12%&gt;&lt;b&gt;Team T&lt;/b&gt;&lt;/td&gt;&lt;td width=12%&gt;&lt;b&gt;Team L&lt;/b&gt;&lt;/td&gt;&lt;td width=12%&gt;&lt;b&gt;Team S&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Class 1 (20 Jan)&lt;/td&gt;&lt;td&gt;Intro&lt;/td&gt;&lt;td&gt;Plan&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;td&gt;Plan&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Class 2 (27 Jan)&lt;/td&gt;&lt;td&gt;Padding Oracle Attacks&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 3 (3 Feb)&lt;/td&gt;&lt;td&gt;Logjam/DROWN&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 4 (10 Feb)&lt;/td&gt;&lt;td&gt;Certificates&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 5 (17 Feb)&lt;/td&gt;&lt;td&gt;TBD&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 6 (24 Feb)&lt;/td&gt;&lt;td&gt;TBD&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 7 (3 Mar)&lt;/td&gt;&lt;td&gt;TBD/Projects&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td bgcolor=&#34;#66EEAA&#34; style=&#34;text-align:center&#34; colspan=5&gt;Spring Break&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 8 (17 Mar)&lt;/td&gt;&lt;td&gt;TBD&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 9 (24 Mar)&lt;/td&gt;&lt;td&gt;TBD&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 10 (31 Mar)&lt;/td&gt;&lt;td&gt;TBD&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 11 (7 Apr)&lt;/td&gt;&lt;td&gt;TBD&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 12 (14 Apr)&lt;/td&gt;&lt;td&gt;TBD&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 13 (31 Mar)&lt;/td&gt;&lt;td&gt;TBD&lt;/td&gt;&lt;td&gt;Food&lt;/td&gt;&lt;td bgcolor=&#34;#44AAEE&#34;&gt;Blog&lt;/td&gt;&lt;td bgcolor=&#34;#CCDD55&#34;&gt;Lead&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class 14 (28 Apr)&lt;/td&gt;&lt;td&gt;Mini-Conference&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tlseminar.github.io/syllabus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tlseminar.github.io/syllabus/</guid>
      <description>

&lt;h2 id=&#34;syllabus&#34;&gt;Syllabus&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;notpdf&#34;&gt;
   &lt;div class=&#34;printing&#34;&gt;&lt;a href=&#34;https://tlseminar.github.io/docs/syllabus.pdf&#34;&gt;PDF for Printing&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;&lt;!--endpdf--&gt;&lt;/p&gt;

&lt;h3 id=&#34;cs6501-understanding-and-securing-tls&#34;&gt;&lt;strong&gt;cs6501: Understanding and Securing TLS&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;University of Virginia, Spring 2017&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Meetings:&lt;/strong&gt; Fridays, 9:30AM - noon, Thornton Hall D115&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Objective.&lt;/strong&gt; SSL/TLS is the world’s most important
  cryptographic protocol, used for every secure web connection and
  many other purposes. Every month it seems we hear about another new
  major vulnerability in TLS. In this project-focused seminar, we’ll
  take a deep dive into understanding how TLS came to be the mess it
  is today, look into some of the vulnerabilities in detail, and study
  methods for making TLS more secure. We will work as a group to
  contribute to open source projects to improve the security of TLS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Expected Background:&lt;/strong&gt; Students are expected to enter the class with
  introductory background in cryptography (sufficient to understand
  symmetric and asymmetric cryptosystems, cryptographic hash
  functions, and digital signatures) and experience in systems
  programming (comparable to a good undergraduate operating systems
  course).  If you do not have this background, you are still welcome
  to take the course, but will need to do some work on your own to be
  prepared before the semester begins (see the course site for links
  to recommended preparation materials).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coordinators:&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&#34;https://halmohri.com/&#34;&gt;Hussain Almohri&lt;/a&gt; (visiting from Kuwait University)&lt;br /&gt;
&lt;a href=&#34;http://www.cs.virginia.edu/evans&#34;&gt;David Evans&lt;/a&gt; (evans@virginia.edu). My &lt;a href=&#34;http://www.cs.virginia.edu/evans/office&#34;&gt;office&lt;/a&gt; is Rice 507.&lt;/p&gt;

&lt;h2 id=&#34;course-expectations&#34;&gt;Course Expectations&lt;/h2&gt;

&lt;p&gt;Students in the seminar are expected to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Lead discussions on interesting topics during the class meetings.
For each week, there will be two groups of two students charged with
preparing a topic and leading the discussion.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Particpate actively in class meetings.  This means being prepared to
contribute by doing the assigned preparation (which will typically
involve reading a few research papers, but may involve other things
also) and thinking about the materials deeply to be able to
contribute well to discussions.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Produce scribe &amp;ldquo;blogs&amp;rdquo; for 2-3 topics.  For each topic, there will
be students assigned to write-up a blog about the topic to post on
the course site.  Students responsible for posting the blog summary
will be different from the ones charged with leading the topic
discussion, but should work closely with the leaders on the posted
write-up.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Work in a small team to conduct projects that will contribute
usefully to the TLS ecosystem. Projects may contribute to open
source implementations of TLS, provide resources for testing and
deploying TLS, analyze the state of TLS deployments today, or adress
other issues related to secure web connections.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Work with the class to produce a systematization of knowledge paper
on the security of TLS.  Everyone will be expected to contribute to
this, with the goal of jointly producing a publishable paper that
systematizes what is currently known about TLS and the ecosystem
around it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;communications&#34;&gt;Communications&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Course Website:&lt;/strong&gt;
  &lt;a href=&#34;https://tlseminar.github.io/&#34;&gt;&lt;em&gt;https://tlseminar.github.io/&lt;/em&gt;&lt;/a&gt;.  All
  course materials will be posted on the course website, and students
  will be expected to provide materials to add to this site.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Slack:&lt;/strong&gt;
  &lt;a href=&#34;https://tlseminar.slack.com&#34;&gt;&lt;em&gt;https://tlseminar.slack.com&lt;/em&gt;&lt;/a&gt;.  We
  will use a slack group for class communications.  You can join using
  any &lt;code&gt;@virginia.edu&lt;/code&gt; email address.  You can also create slack
  channels for your team communications.&lt;/p&gt;

&lt;h2 id=&#34;honor-and-responsibility&#34;&gt;Honor and Responsibility&lt;/h2&gt;

&lt;p&gt;We believe strongly in the value of a &lt;em&gt;community of trust&lt;/em&gt;, and expect
all of the students in this class to contribute to strenghtening and
enhancing that community.  The course will be better for everyone if
everyone can assume everyone else is trustworthy. The course staff
starts with the assumption that all students at the university deserve
to be trusted.&lt;/p&gt;

&lt;p&gt;In this course, we will be learning about and exploring some
vulnerabilities that could be used to compromise &lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=collab.virginia.edu&amp;amp;latest&#34;&gt;vunlerable
websites&lt;/a&gt;.
&lt;strong&gt;You are trusted to behave responsibility and ethically.&lt;/strong&gt; You may
not attack any website without permission of the site owners, and may
not use anything you learn in this class for evil.  If you have any
doubts about whether or not something you want to do is ethical and
legal, you should check with the course instructor before proceeding.&lt;/p&gt;

&lt;h2 id=&#34;area-requirements&#34;&gt;Area Requirements&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note for CS Graduate Students.&lt;/strong&gt; This course is mislisted in SIS
(indeed, it is a &amp;ldquo;bug&amp;rdquo; in the setup of SIS that cannot be overcome
that requires all grad courses to be assigned areas) as counting for
the &amp;ldquo;Computer Systems&amp;rdquo; and &amp;ldquo;Theory&amp;rdquo; area requirements.  As per the
actual rules, as a cs6501 seminar the course does not a priori count
for any particular areas.  It may be possible to count it for any
area, but it would be up to you to make the case to your committee
that it should count for a given area. In most cases, this will depend
a lot on what you individually do in the class - for example, you
could select presentation topics and a topic for you project that
would make a strong case for counting it for the &amp;ldquo;Theory&amp;rdquo; area, but
someone else who does a systems-focused project would be able to count
it for a different area. I can help provide guidance on this, but it
is ultimately up to your committee to decide if a course counts for a
particular area requirement.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>cs2102: Discrete Math</title>
      <link>https://tlseminar.github.io/main/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tlseminar.github.io/main/</guid>
      <description>&lt;p&gt;This is the front page.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://tlseminar.github.io/syllabus&#34;&gt;Syllabus&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Coming soon&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>